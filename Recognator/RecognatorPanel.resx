<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="workStatus.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADcAAAA3CAYAAACo29JGAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAPISURBVGhD7Vk/TBNRGO/IyOgmIzG2JQ5Gtw4O3WSQu2pM
        ZHBg7EjiYLfKFcU4yGRYTJq4NA7awaEjRgdiRAsUcnHqiFvH+vvKB17ffQfl3p8y3C/5hebeu+/Pve/P
        e49chgwZMmTIkCEder1eGawdHR1tHB4edqLEs00aw+9KGIaz/MrVBoxdhtFNcIDfw0uwfXBwsHIlHYUz
        izCwqxh8aUJOH05WWex0sbe3Nw+jKNREYzUYwtEyq3EPUg4eC4YZ41RWkZRKxkQJxynvWvhbA0tR4v1V
        FJUt/O6r76mkecjFGVZtF2SYZESEHRi9yNMvBDmLd1qKjDFiTpOn2wOUlCXlTK08YScT85c+Kk81Dyoe
        MCApx7YROtd4qha4L0o6aAXtFBkI31GVEW3kBFZpRdIF5/rG8w9CqY/FlIEdW8lOuxhBH7HOU/RBxkNg
        qCggYshMKEpgvbEcxIceGNN7TohYb7L7+/sL5Iyqm/KSp+gBwtqqcLDFw9aRUGBCHk4PCg3py+FZiadY
        B4Wgqp9Iq8pT0gFOxAoJnh3zsDNAr5R7NR5OBwipq0Kp9POwMyTsito8nA74Ok1VKBUYHnYGCkHVDrDL
        w+kAAVI4OMu3U0h5p50eEBLrb7QN42GngDOxwgan05/cITB2JIHAOR52ClopwZb0zRwCtlWBUwpL2q2M
        2UHk4XSAAOmcVeFhZ+DrDNUOvUaesHk1t3GdENBZUWwgdng4HRL2laMSfCNYsrZpVoFUiLUk7X5LxUMV
        +vlbZ3jr5aNf+Ya/w9OsgvJNKiZ4NvFVRiIgaHRI/b67M6x+WBsWGv5/ri1Zb+iInthlFByjY4/+ORKC
        asGnd8O7r5fHHTth32Z48qpJN2T6p5Kb6w/nFxqVnuDUGfPr/iZPN46EPaWZdkSrUmh4A8mpKJF/ejt0
        AeQAhZ/gnLmzZD7wqpJDKk04WAgelPMvvDtUyOCYeNOmfY6L4vrzJzNUGSWHVGJem0KZX50YxY37s4iQ
        LZJx+9XjP7vd338lx4xdL0RRbPgl1ZFkegPKw2KwdOEXLtb9ObyzkQ/846iMZ603McdAazdtOShtRQ2Y
        iIHXheFNCtkxwnmMb8fmR/jx65eoY/DL4v/uKHRg2EThaYL33q4Mf3R/njpm/yTi2sGn72t0w+zuv62u
        HaQKyqrd4KSCenXRGKP0tuhjslq3oJ5ERUM2TIt95ysmYbSK1OgNOIloCAuBvzq11ToP1MCpzI+MFIyX
        Odreoc14zk/4qUErOmr+WImz/hYhOZNmN5MhQ4YMjpHL/QMTVnWRRvlBBAAAAABJRU5ErkJggg==
</value>
  </data>
  <metadata name="detectWorker.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
</root>